name: Deploy Hugo Blog to AWS S3 and CloudFront

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch: # Allow manual triggering

env:
  HUGO_VERSION: '0.150.0'
  S3_BUCKET: 'raze-website'
  CLOUDFRONT_DISTRIBUTION_ID: 'ES52SN9381PAQ'
  AWS_REGION: 'us-east-1'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true  # Fetch Hugo themes
        fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: ${{ env.HUGO_VERSION }}
        extended: true

    - name: Build Hugo site
      run: |
        echo "Building Hugo site..."
        hugo --minify
        echo "Build completed. Files in public directory:"
        ls -la public/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: hugo-site
        path: public/
        retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: hugo-site
        path: public/

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Verify AWS connection
      run: |
        echo "Verifying AWS connection..."
        aws sts get-caller-identity
        aws s3 ls s3://${{ env.S3_BUCKET }} --region ${{ env.AWS_REGION }}

    - name: Deploy to S3
      run: |
        echo "Deploying to S3 bucket: ${{ env.S3_BUCKET }}"
        aws s3 sync ./public/ s3://${{ env.S3_BUCKET }} \
          --delete \
          --cache-control "public, max-age=3600" \
          --exclude "*.html" \
          --exclude "*.xml" \
          --exclude "*.json"
        
        # Set shorter cache for HTML, XML, and JSON files
        aws s3 sync ./public/ s3://${{ env.S3_BUCKET }} \
          --delete \
          --cache-control "public, max-age=300" \
          --exclude "*" \
          --include "*.html" \
          --include "*.xml" \
          --include "*.json"
        
        echo "S3 sync completed successfully"
      
    - name: Invalidate CloudFront cache
      run: |
        echo "Creating CloudFront invalidation..."
        INVALIDATION_ID=$(aws cloudfront create-invalidation \
          --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
          --paths "/*" \
          --query 'Invalidation.Id' \
          --output text)
        
        echo "Invalidation created with ID: $INVALIDATION_ID"
        echo "You can check the status at: https://console.aws.amazon.com/cloudfront/home?region=us-east-1#distribution-settings:${{ env.CLOUDFRONT_DISTRIBUTION_ID }}"

    - name: Deployment summary
      run: |
        echo "üéâ Deployment completed successfully!"
        echo "üìù Blog URL: https://blog.raze.mx"
        echo "‚òÅÔ∏è S3 Bucket: ${{ env.S3_BUCKET }}"
        echo "üåê CloudFront Distribution: ${{ env.CLOUDFRONT_DISTRIBUTION_ID }}"
        echo "‚è∞ Cache invalidation in progress - changes will be live within 5-15 minutes"

  preview:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: hugo-site
        path: public/

    - name: Preview build info
      run: |
        echo "üîç Pull Request Preview"
        echo "This is a preview build for PR #${{ github.event.number }}"
        echo "Files built:"
        find public -name "*.html" | head -10
        echo "Total files: $(find public -type f | wc -l)"
        echo "Site size: $(du -sh public | cut -f1)"